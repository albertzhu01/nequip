# Example config for DEPLOYING a TRAINED model with an additional Gaussian Mixture Model (GMM) for uncertainty quantification
# See https://arxiv.org/abs/2211.09866
# This config assumes you have run `configs/minimal.yaml` to train a model; the paths must be updated appropriately for real use

# This special key loads ALL KEYS from the specified YAML file
# We use it here to load all the hyperparameters, etc. of the model we're trying to deploy from its training dir
# This guerantees they can't get out of sync/disagree
include_file_as_baseline_config: results/aspirin/minimal/config.yaml
#                                \_____________________/     |
#                                    root + run_name         \- autogenerated file containing the FINAL config of the trained model
#                                      (train dir)              different than the original config you trained from

# Then, later in this file, we can override selected keys from config.yaml
# In particular, we need to override the `model_builders` to add the GMM:
# !! IMPORTANT !!:  this should MATCH YOUR ORIGINAL TRAINING; these are just the right ones for `minimal.yaml`:

model_builders:
 # from minimal.yaml
 - SimpleIrrepsConfig               # update the config with all the irreps for the network if using the simplified `l_max` / `num_features` / `parity` syntax
 - EnergyModel                      # build a full NequIP model
 - PerSpeciesRescale                # add per-atom / per-species scaling and shifting to the NequIP model before the total energy sum
 - StressForceOutput                      # wrap the energy model in a module that uses autodifferention to compute the forces
 - RescaleEnergyEtc  
 # !! NEW !!
 - load_model_state
 - GaussianMixtureModelUncertainty  # add, AND FIT a GMM

# we have to tell the `load_model_state` model builder what state/weights to load
# we want to load the best model from the original training:
load_model_state: results/aspirin/minimal/best_model.pth
# (note best_model.pth is not a deployed model, it's just a weight checkpoint from the original training directory `results/aspirin/minimal/`)

# GaussianMixtureModelUncertainty requires the training dataset to fit on, but remember:
# `include_file_as_baseline_config` included ALL options from `minimal.yaml`, including
# the definition of the training set.

# We can also set options that were never set in the original config to begin with, 
# like this for the GMM:
# gmm_n_components can be either an int, or `null`, in which case the Bayesian Information Criterion 
#                  will be used to choose the number of components.
gmm_n_components: null
